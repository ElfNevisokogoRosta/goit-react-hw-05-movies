{"version":3,"file":"static/js/10.db613b2e.chunk.js","mappings":"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","sources":["components/Loader.styled.ts","components/Loader.tsx","pages/Movie/MovieData/Cast/Cast.styled.ts","pages/Movie/MovieData/Cast/CastCard/CastCard.styled.ts","pages/Movie/MovieData/Cast/CastCard/CastCard.tsx","pages/Movie/MovieData/Cast/Cast.tsx","utils/customHooks/useCast.tsx"],"sourcesContent":["import styled from \"styled-components\";\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport { Container };\n","import React from \"react\";\nimport { Dna } from \"react-loader-spinner\";\nimport { Container } from \"./Loader.styled\";\nexport const Loader: React.FC = () => {\n  return (\n    <Container>\n      <Dna\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\nconst CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  list-style-type: none;\n  margin: 0;\n  margin-top: 30px;\n  gap: 15px;\n  margin-bottom: 30px;\n`;\nexport { CastList };\n","import styled from \"styled-components\";\nconst CastCardTitle = styled.h3`\n  margin: 0px;\n  margin-bottom: 15px;\n  text-align: center;\n  font-size: 20px;\n`;\nconst CastCardDis = styled.p`\n  margin: 0px;\n  margin-bottom: 30px;\n  text-align: center;\n  font-size: 20px;\n`;\nconst ImgWrpaer = styled.div`\n  position: relative;\n  padding-top: 150%;\n  box-sizing: border-box;\n`;\nconst Img = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n  box-sizing: border-box;\n`;\nexport { CastCardTitle, CastCardDis, ImgWrpaer, Img };\n","import React from \"react\";\nimport { CastCardProps } from \"../../../../../utils/interfaces\";\nimport { CastCardTitle, CastCardDis, ImgWrpaer, Img } from \"./CastCard.styled\";\nconst placeholder = require(\"../../../../../images/placeholder.jpg\");\n\nexport const CastCard: React.FC<CastCardProps> = ({ actor }) => {\n  return (\n    <li>\n      <CastCardTitle>{actor.name}</CastCardTitle>\n      <CastCardDis>{actor.character}</CastCardDis>\n      <ImgWrpaer>\n        {actor.profileImg === null ? (\n          <Img src={placeholder} alt=\"placeholder\" />\n        ) : (\n          <Img\n            src={`https://image.tmdb.org/t/p/w500${actor.profileImg}`}\n            alt={actor.name}\n          />\n        )}\n      </ImgWrpaer>\n    </li>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useCast } from \"../../../../utils/customHooks/useCast\";\nimport { CastList } from \"./Cast.styled\";\nimport { CastCard } from \"./CastCard/CastCard\";\nimport { CastI, ActorI } from \"../../../../utils/interfaces\";\nimport { Loader } from \"../../../../components/Loader\";\n\nconst Cast: React.FC = () => {\n  const [res, setRes] = useState<CastI[]>([]);\n  const { movieId } = useParams();\n  const [loading, error, result] = useCast(movieId || \"000\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const res = result.map((actor: ActorI) => ({\n      id: actor.id,\n      character: actor.character,\n      name: actor.name,\n      profileImg: actor.profile_path,\n    }));\n    setRes(res);\n  }, [result]);\n  if (error) {\n    navigate(\"/error\");\n  }\n  return (\n    <div>\n      <CastList>\n        {res.map((actor: CastI, id) => (\n          <CastCard key={`${actor.id}-${id}`} actor={actor} />\n        ))}\n        {loading && <Loader />}\n      </CastList>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { ActorI } from \"../interfaces\";\nexport const useCast = (id: string): [boolean, boolean | {}, ActorI[]] => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean | {}>(false);\n  const [result, setResult] = useState<ActorI[]>([\n    {\n      character: \"\",\n      name: \"\",\n      profile_path: \"\",\n      id: 1,\n    },\n  ]);\n  const options = {\n    method: \"GET\",\n    url: `https://api.themoviedb.org/3/movie/${id}/credits`,\n    params: { language: \"en-US\" },\n    headers: {\n      accept: \"application/json\",\n      Authorization:\n        \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNjMyZGIyYjk3MmRhNDVhYTM2ZGNjNDQ4OTkxZjVhOSIsInN1YiI6IjYzZGNjMzI1MzczYWMyMDA3YzFmMWQzNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DZJG4ucbFS5JBmGqClsdFcJE-gYfRMAFvYwLoM8XCWc\",\n    },\n  };\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .request(options)\n      .then(function (response) {\n        setResult(response.data.cast);\n        setLoading(false);\n      })\n      .catch(function (error) {\n        setError(error);\n        setLoading(false);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  return [loading, error, result];\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","CastList","CastCardTitle","CastCardDis","_templateObject2","ImgWrpaer","_templateObject3","Img","_templateObject4","placeholder","require","CastCard","_ref","actor","_jsxs","name","character","profileImg","src","alt","concat","_useState","useState","_useState2","_slicedToArray","res","setRes","_useCast","id","loading","setLoading","_useState3","_useState4","error","setError","_useState5","profile_path","_useState6","result","setResult","options","method","url","params","language","headers","accept","Authorization","useEffect","axios","then","response","data","cast","catch","useCast","useParams","movieId","_useCast2","navigate","useNavigate","map"],"sourceRoot":""}